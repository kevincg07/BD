--Este es un comentario
/*comentarios
en varias
lineas
*/
--DML Y DDL
/*
Marca, modelo, año, precio, 
placas, ciinfros
*/
--DDL MANIPULACION DE LA INFORMACION
--DML MANIPALCION DE LAS ESTRUCTRUCCTURAS ES PARA CREAR
CREATE TABLE AUTOS(
AUTO_ID NUMBER PRIMARY KEY,
MODELO VARCHAR(20),
MARCA VARCHAR(20),
AÑO NUMBER,
PRECIO NUMBER(8,2),
PLACAS VARCHAR(10),
CILINDROS NUMBER(3,2)
);
--SENTECIAS DDL MODICAN LAS SENTENCIAS DE LA INFORMACION
ALTER TABLE AUTOS  --AÑADIR UNA NUEVA COLUMNA
ADD IMPORTE NUMBER(8,2);

ALTER TABLE AUTOS   --ELIMINAR UNA COLUMNA
DROP COLUMN IMPORTE;

ALTER TABLE AUTOS MODIFY  MODELO VARCHAR(30); --CAMBIAR EL TIPO DE DATO
ALTER TABLE AUTOS RENAME COLUMN CILINDROS TO MOTOR; --CAMBIAR EL NOMBRE DE LA COLUMNA

--VER LA ESTRUCTURA DE LA TABLA
DESCRIBE AUTOS;
ALTER TABLE AUTOS ADD COMBUSTIBLE VARCHAR(15);

DESCRIBE AUTOS;
ALTER TABLE AUTOS DROP COLUMN COMBUSTIBLE;
DESCRIBE AUTOS;

ALTER TABLE AUTOS ADD COMBUSTIBLE VARCHAR(10);
ALTER TABLE AUTOS RENAME COLUMN COMBUSTIBLE TO TIPO;

DESCRIBE AUTOS;

ALTER TABLE AUTOS MODIFY TIPO NUMBER;

---------------------------------

CREATE TABLE ASUNTOS(
NUM_EXP NUMBER PRIMARY KEY,
FECHA_INICIO DATE,
FECHA_FIN DATE,
ESTATUS NVARCHAR2(15), --EN TRAMITE, ARCHIVADO, FINALIZADO
CLIENTE_ID NUMBER,
CONSTRAINT CHK_ESTATUS CHECK(ESTATUS IN ('Tramite', 'Achivado', 'Finalizado'))
);

--------------------------
CREATE TABLE CLIENTES(
DNI NUMBER PRIMARY KEY,
NOMBRE NVARCHAR2(20),
DIRECCION NVARCHAR2(30),
TELEFONO NVARCHAR2(10),
FECHA_NAC DATE
);

-------------------------
CREATE TABLE ABOGADOS(
ID NUMBER PRIMARY KEY,
NOMBRE NVARCHAR2(20),
DIRECCION NVARCHAR2(30),
CEDULA NVARCHAR2(10),
TELEFONO NVARCHAR2(10)
);
-------------------
CREATE TABLE ASUNTOS_PROC(
REL_ID NUMBER PRIMARY KEY,
ASUNTOS_ID NUMBER,
ABOGADO_ID NUMBER
);

ALTER TABLE ASUNTOS ADD CONSTRAINT FK_ASUNTOS_CLIENTE_ID
FOREIGN KEY(CLIENTE_ID) ---NOMBRE DE LA COLUMNA QUE RECIBE EL DATO
REFERENCES CLIENTES(DNI); ----NOMBRE DE LA TABLA Y COLUMNA DONDE VIENE EL DATO

ALTER TABLE ASUNTOS_PROC ADD CONSTRAINT FK_ASUNTOS_PROC_ABOGADOS_ID
FOREIGN KEY(ABOGADO_ID)
REFERENCES ABOGADOS(ID);

ALTER TABLE ASUNTOS_PROC ADD CONSTRAINT FK_ASUNTOS_PROC_ASUNTOS_ID
FOREIGN KEY(ASUNTOS_ID)
REFERENCES ASUNTOS(NUM_EXP);

------------------------------
----CREACION DEL PROYECTO DE BANCO ------
CREATE TABLE CLIENTES(
ID_COSTUMER NUMBER PRIMARY KEY,
NOMBRE NVARCHAR2(30),
DIRECCION NVARCHAR2(40),
NUMERO_TELEFONO NUMBER(10),
RFC NVARCHAR2(15)
);

CREATE TABLE CUENTAS(
ID_CUENTA NUMBER PRIMARY KEY,
NUM_CUENTA NUMBER,
SALDO_DISPONIBLE NUMBER,
SALDO_MAX NUMBER,
SALDO_MIN NUMBER,
TIPO_CUENTA NVARCHAR2(15),
CONSTRAINT CHK_TIPO_CUENTA CHECK (TIPO_CUENTA IN ('CREDITO','CHEQUES','DEBITO'))
);

CREATE TABLE CLIENTE_CUENTA(
CLIENTE_ID NUMBER PRIMARY KEY,
CUENTA_ID NUMBER
);

CREATE TABLE TARJETAS(
ID_TARJETA NUMBER PRIMARY KEY,
NUM_TARJETA NUMBER,
NIP NUMBER,
VENCIMIENTO DATE,
CUENTA_ID NUMBER
);

CREATE TABLE PRESTAMOS(
NUM_PRESTAMO NUMBER PRIMARY KEY,
CLIENTE_ID NUMBER,
MONTO NUMBER,
FECHA DATE,
ESTADO NVARCHAR2(20),
CONSTRAINT CHK_ESTADO CHECK(ESTADO IN('ACEPTADO','RECHAZADO'))
);

CREATE TABLE ABONOS(
ABONO_ID NUMBER PRIMARY KEY,
PRESTAMO_ID NUMBER,
MONTO NUMBER,
PRESTAMO NUMBER,
FECHA DATE
);

DROP TABLE CLIENTE_CUENTA;

CREATE TABLE CLIENTE_CUENTA(
CLIENTE_ID NUMBER,
CUENTA_ID NUMBER
);

ALTER TABLE PRESTAMOS ADD CONSTRAINT FK_ID_NOMBRE
FOREIGN KEY(CLIENTE_ID)
REFERENCES CLIENTES(ID_COSTUMER);

ALTER TABLE CUENTAS ADD CLIENTE NUMBER;

ALTER TABLE CUENTAS ADD CONSTRAINT FK_CLIENTE_ID
FOREIGN KEY(CLIENTE)
REFERENCES CLIENTES(ID_COSTUMER);

ALTER TABLE TARJETAS ADD CONSTRAINT FK_CUENTA_ID
FOREIGN KEY(CUENTA_ID)
REFERENCES CUENTAS(ID_CUENTA);

ALTER TABLE ABONOS ADD CONSTRAINT FK_ABONOS_ID
FOREIGN KEY(PRESTAMO_ID)
REFERENCES PRESTAMOS(NUM_PRESTAMO);

ALTER TABLE CLIENTE_CUENTA ADD CONSTRAINT FK_CUENTAID
FOREIGN KEY(CUENTA_ID)
REFERENCES CUENTAS(ID_CUENTA); 

ALTER TABLE CLIENTE_CUENTA ADD CONSTRAINT FK_CUSTUMERID
FOREIGN KEY(CLIENTE_ID)
REFERENCES CLIENTES(ID_COSTUMER); 

--ALTER TABLE

--CONDICINOONAR QUE NO SE REPITA EL RFC
ALTER TABLE CLIENTES ADD CONSTRAINT UQ_CUSTUMERS_RFC
UNIQUE (RFC);

--CONDICIONAR QUE NO SE REPITA EL NUNMEOR DE CUENTA
ALTER TABLE CUENTAS ADD CONSTRAINT UQ_CEUNTAS_NUM_CUENTA
UNIQUE(NUM_CUENTA);
--CONDICIONAR QU ENO SE REPITA EL NUMERO DE TARJETA
ALTER TABLE TARJETAS ADD CONSTRAINT UQ_TARJETA_NUM_TARJETA
UNIQUE(NUM_TARJETA);

--crear sequancia para los clientes y su triger
CREATE SEQUENCE SQ_CLIENTES_ID START WITH 1 INCREMENT BY 1;
CREATE OR REPLACE TRIGGER ON_INSERT_CLIENTES BEFORE 
INSERT ON CLIENTES FOR EACH ROW BEGIN 
SELECT SQ_CLIENTES_ID.NEXTVAL INTO :new.ID_COSTUMER FROM dual; --DUAL ES UNA TABLA TEMPORAL
END;

--INSERCION MANUAL
DESCRIBE CLIENTES;
INSERT INTO CUSTUMERS VALUES(1,'JUAN PEREZ','AVENIDA 5 DE MAYO', 'JUANFLO01011079');
INSERT INTO CUSTUMERS VALUES(2,'MIGUEL ALVAREZ','AVENIDA REVOLUCION #234', 'MGLALV010137NJ8');
INSERT INTO CUSTUMERS VALUES(3,'ALONDRA JUAREZ','CALLE REVOLUCION #1123', 'ALOJUA234576HU2');
INSERT INTO CUSTUMERS VALUES(4,'IVONNE ROSAS','AVENIDA INDEPENDENCIA #879', 'IVNERO69809J98');
INSERT INTO CUSTUMERS VALUES(5,'GABRIEL JUAREZ','VILLA CARMEL #5111', 'GABLJU123498F65');
INSERT INTO CLIENTES VALUES('KEVIN GARCIA','CALLE 1 DE MAYO #987', 5562347865, 'GABLJU123498F65');


--INSERCION PARA LA PROPIA BASE DE DATOS PERSONAL
INSERT ALL
INTO CLIENTES(NOMBRE, DIRECCION,NUMERO_TELEFONO,RFC)
VALUES('Juan Perez', 'Avenida 5 de mayo', 2361038703, 'JUANFLO01011079')
INTO CLIENTES(NOMBRE, DIRECCION, NUMERO_TELEFONO, RFC)
VALUES('MIGUEL ALVAREZ','AVENIDA REVOLUCION #234', 2389002365, 'MGLALV010137NJ8')
INTO CLIENTES(NOMBRE, DIRECCION, NUMERO_TELEFONO, RFC)
VALUES('ALONDRA JUAREZ','CALLE REVOLUCION #1123', 7562310987, 'ALOJUA234576HU2')
INTO CLIENTES(NOMBRE, DIRECCION, NUMERO_TELEFONO, RFC)
VALUES('GABRIEL JUAREZ','VILLA CARMEL #5111',2358905643, 'GABLJU123498F65')
INTO CLIENTES(NOMBRE, DIRECCION, NUMERO_TELEFONO, RFC)
VALUES('IVONNE ROSAS','AVENIDA INDEPENDENCIA #879',6782347809, 'IVNERO69809J98')
SELECT * FROM DUAL;


ALTER TABLE CLIENTES MODIFY NUMERO_TELEFONO NVARCHAR2(10);
DESCRIBE CUENTAS;
ALTER TABLE CLIENTES DROP COLUMN NUMERO_TELEFONO;
--CREAR UN AUTOINCREMENTO EN ID CEUNTAS
ALTER TABLE CLIENTES ADD NUMERO_TELEFONO NVARCHAR2(10);
DESCRIBE CLIENTES
CREATE SEQUENCE SQ_CUENTAS_ID START WITH 1 INCREMENT BY 1;
SELECT * FROM CLIENTES;
UPDATE CLIENTES SET NUMERO_TELEFONO = '3320984567' WHERE ID_COSTUMER = 5;
COMMIT;
SELECT C.NOMBRE, C.RFC, C.NUMERO_TELEFONO, CU.NUM_CUENTA, CU.TIPO_CUENTA,
CU.SALDO_MAX, CU.SALDO_MIN
FROM CLIENTES C INNER JOIN CUENTAS CU
ON C.ID_COSTUMER = CU.CLIENTE;
SELECT * FROM CUENTAS;
DESCRIBE CUENTAS
--UN TRIGER ES UN CODIGO QUE SE EJECUTA DE MANERA
--AUTOMATICA LNZADO PR EVENTO
--ESTE EVENTO SE UTILZA EN UN DETERMINADO MOMEMNTO SE UTILZA EL BEFORE
--ESTE TRIGER CTUA ANTES DE CADA INSERCION
CREATE OR REPLACE TRIGGER ON_INSERT_CUENTAS BEFORE 
INSERT ON CUENTAS FOR EACH ROW BEGIN 
SELECT SQ_CUENTAS_ID.NEXTVAL INTO :new.ID_CUENTA FROM dual; --DUAL ES UNA TABLA TEMPORAL
END;

--UNA TRANSACCION UN CONJUNTO DE N OPERACIONES DONDE DE TODAS DEBEN 
-- DE REALIZARCE BIEN O NINGUNA LO HACE
DESCRIBE CUENTAS;
--INSERTAR VARIAS FILA EN UNA SOLA TRANSACCION
INSERT ALL
INTO CUENTAS(NUM_CUENTA, SALDO_DISPONIBLE, SALDO_MAX, SALDO_MIN,TIPO_CUENTA, CLIENTE)
VALUES (111, 900, 15000, 200, 'DEBITO', 1)
INTO CUENTAS(NUM_CUENTA, SALDO_DISPONIBLE, SALDO_MAX, SALDO_MIN,TIPO_CUENTA, CLIENTE)
VALUES (112, 500, 16000, 300, 'CHEQUES', 2)
INTO CUENTAS(NUM_CUENTA, SALDO_DISPONIBLE, SALDO_MAX, SALDO_MIN,TIPO_CUENTA, CLIENTE)
VALUES (113, 1000, 25000, 500, 'CREDITO', 3)
INTO CUENTAS(NUM_CUENTA, SALDO_DISPONIBLE, SALDO_MAX, SALDO_MIN,TIPO_CUENTA, CLIENTE)
VALUES (114, 700, 10000, 300, 'DEBITO', 2)
INTO CUENTAS(NUM_CUENTA, SALDO_DISPONIBLE, SALDO_MAX, SALDO_MIN,TIPO_CUENTA, CLIENTE)
VALUES (115, 1200, 17000, 300, 'CHEQUES', 1)
INTO CUENTAS(NUM_CUENTA, SALDO_DISPONIBLE, SALDO_MAX, SALDO_MIN,TIPO_CUENTA, CLIENTE)
VALUES (117, 700, 15000, 200, 'DEBITO', 5)
SELECT * FROM DUAL;

SELECT * FROM CUENTAS;

CREATE SEQUENCE SQ_TARJETAS_ID START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER ON_INSERT_TARJETAS BEFORE 
INSERT ON TARJETAS FOR EACH ROW BEGIN 
SELECT SQ_TARJETAS_ID.NEXTVAL INTO :new.ID_TARJETA FROM dual; --DUAL ES UNA TABLA TEMPORAL
END;

DESCRIBE TARJETAS;
INSERT ALL
INTO TARJETAS(NUM_TARJETA, NIP, VENCIMIENTO, CUENTA_ID)
VALUES(10202010, 8273,'23-08-2025',1)
INTO TARJETAS(NUM_TARJETA, NIP, VENCIMIENTO, CUENTA_ID)
VALUES(10201011, 5123,'24-03-2025',2)
INTO TARJETAS(NUM_TARJETA, NIP, VENCIMIENTO, CUENTA_ID)
VALUES(10202012, 6534,'03-01-2026',3)
INTO TARJETAS(NUM_TARJETA, NIP, VENCIMIENTO, CUENTA_ID)
VALUES(10202013, 9801,'12-09-2024',1)
INTO TARJETAS(NUM_TARJETA, NIP, VENCIMIENTO, CUENTA_ID)
VALUES(10202014, 1287,'11-12-2024',5)
SELECT * FROM DUAL;

SELECT * FROM TARJETAS;
SELECT * FROM CUENTAS;

SELECT C.NOMBRE, C.RFC, C.NUMERO_TELEFONO, CU.NUM_CUENTA, CU.TIPO_CUENTA,
CU.SALDO_MAX, CU.SALDO_MIN, T.NUM_TARJETA, T.VENCIMIENTO
FROM CLIENTES C INNER JOIN CUENTAS CU
ON C.ID_COSTUMER = CU.CLIENTE INNER JOIN TARJETAS T
ON T.CUENTA_ID = CU.ID_CUENTA;

SELECT C.NOMBRE, C.NUMERO_TELEFONO, P.MONTO, 
P.FECHA, P.ESTADO, T.NUM_TARJETA, CU.TIPO_CUENTA 
FROM CLIENTES C INNER JOIN PRESTAMOS P 
ON P.CLIENTE_ID = C.ID_COSTUMER INNER JOIN TARJETAS T
ON T.CUENTA_ID = C.ID_COSTUMER INNER JOIN CUENTAS CU
ON CU.ID_CUENTA =T.CUENTA_ID;

SELECT C.NOMBRE, P.MONTO, P.FECHA 
FROM CLIENTES C INNER JOIN PRESTAMOS P 
ON P.CLIENTE_ID = C.ID_COSTUMER WHERE C.NOMBRE = 'Juan Perez';

CREATE SEQUENCE SQ_NUM_PRESTAMO START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER ON_INSERT_PRESTAMOS BEFORE 
INSERT ON PRESTAMOS FOR EACH ROW BEGIN 
SELECT SQ_NUM_PRESTAMO.NEXTVAL INTO :new.NUM_PRESTAMO FROM dual; --DUAL ES UNA TABLA TEMPORAL
END;


DESCRIBE PRESTAMOS;
INSERT ALL
INTO PRESTAMOS(CLIENTE_ID, MONTO, FECHA, ESTADO)
VALUES(1, 20000, '23-08-2023', 'ACEPTADO')
INTO PRESTAMOS(CLIENTE_ID, MONTO, FECHA, ESTADO)
VALUES(2, 30000, '23-07-2023', 'ACEPTADO')
INTO PRESTAMOS(CLIENTE_ID, MONTO, FECHA, ESTADO)
VALUES(3, 20000, '03-06-2023', 'ACEPTADO')
INTO PRESTAMOS(CLIENTE_ID, MONTO, FECHA, ESTADO)
VALUES(4, 20000, '23-12-2024', 'ACEPTADO')
INTO PRESTAMOS(CLIENTE_ID, MONTO, FECHA, ESTADO)
VALUES(1, 20000, '02-08-2022', 'RECHAZADO')
SELECT * FROM DUAL;

SELECT * FROM PRESTAMOS;

CREATE SEQUENCE SQ_ABONO_ID START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE SQ_ABONOS START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER ON_INSERT_ABONOS BEFORE 
INSERT ON ABONOS FOR EACH ROW BEGIN 
SELECT SQ_ABONO_ID.NEXTVAL INTO :new.ABONO_ID FROM dual; --DUAL ES UNA TABLA TEMPORAL
END;

SELECT * FROM PRESTAMOS;
DESCRIBE ABONOS;

INSERT ALL 
INTO ABONOS(PRESTAMO_ID, MONTO, PRESTAMO, FECHA)
VALUES(2, 1000, 20000, '24-09-2023')
INTO ABONOS(PRESTAMO_ID, MONTO, PRESTAMO, FECHA)
VALUES(3, 1000, 19000, '24-10-2023')
INTO ABONOS(PRESTAMO_ID, MONTO, PRESTAMO, FECHA)
VALUES(4, 1000, 18000, '24-11-2023')
INTO ABONOS(PRESTAMO_ID, MONTO, PRESTAMO, FECHA)
VALUES(5, 1000, 30000, '24-09-2023')
INTO ABONOS(PRESTAMO_ID, MONTO, PRESTAMO, FECHA)
VALUES(3, 1000, 29000, '24-09-2023')
SELECT * FROM DUAL;

SELECT * FROM CUSTUMERS;
SELECT * FROM CUENTAS;
SELECT * FROM TARJETAS;
SELECT * FROM PRESTAMOS;
SELECT * FROM ABONOS;
DESCRIBE CLIENTES
COMMIT;
--SELECCIONAR CAMPOS DE UNA TABLA
SELECT NOMBRE, RFC FROM CUSTUMERS;

--SELECCIONAR CAMPOS Y ASIGNARLES UN ALIAS 
SELECT NOMBRE AS CLIENTE, RFC AS SAT FROM CUSTUMERS;
--SELECCIONAR CAMPOS Y ASIGNARLES UN ALIAS 
SELECT NOMBRE "CUSTUMER", DIRECCION FROM CUSTUMERS;

SELECT ID_COSTUMER, RFC, RFC || '-' || ID_COSTUMER "RFC_ID" FROM CUSTUMERS;

SELECT NUM_PRESTAMO, CLIENTE_ID, MONTO FROM PRESTAMOS WHERE MONTO > 20000;

COMMIT;

------------------------------
--base de datos universida
-----------------------------

CREATE TABLE ESTUDIANTES(
ID_ESTUDIANTE NUMBER PRIMARY KEY,
NOMBRE NVARCHAR2(30),
TELEFONO NVARCHAR2(10),
EMAIL NVARCHAR2(20),
FECHA_INGRESO DATE,
CARRERA NUMBER,
COLEGIATURA NUMBER(6,2)
);

CREATE TABLE PROFESORES(
ID_PROFESOR NUMBER PRIMARY KEY,
NOMBRE NVARCHAR2(30),
CEDULA NVARCHAR2(10),
TELEFONO NVARCHAR2(10),
FECHA_INGRESO DATE,
AREA NVARCHAR2(20),
SUELDO NUMBER(6,2)
);

CREATE TABLE MATERIAS(
ID_MATERIA NUMBER PRIMARY KEY,
MATERIA NVARCHAR2(15)
);

CREATE TABLE CARRERAS(
ID_CARRERA NUMBER PRIMARY KEY,
NOMBRE NVARCHAR2(20),
DURACION NVARCHAR2(15)
);

CREATE TABLE PAGOS(
ID_PAGO NUMBER PRIMARY KEY,
ESTUDIANTE NUMBER,
FECHA DATE
);

CREATE TABLE CLASES(
ID_CLASE NUMBER PRIMARY KEY,
PROFESOR NUMBER);

CREATE TABLE SUELDOS(
ID_PAGO NUMBER PRIMARY KEY,
PROFESOR NUMBER,
FECHA DATE,
MONTO NUMBER(6,2)
);

ALTER TABLE ESTUDIANTES ADD CONSTRAINT FK_ESTUDIANTES
FOREIGN KEY (CARRERA)
REFERENCES CARRERAS(ID_CARRERA);

ALTER TABLE PAGOS ADD CONSTRAINT FK_PAGOS_ESTUDIANTES
FOREIGN KEY (ESTUDIANTE)
REFERENCES ESTUDIANTES(ID_ESTUDIANTE);

ALTER TABLE CLASES ADD CONSTRAINT FK_PROF
FOREIGN KEY (PROFESOR)
REFERENCES PROFESORES(ID_PROFESOR);

ALTER TABLE CLASES ADD MATERIA NUMBER;
ALTER TABLE CLASES ADD CONSTRAINT FK_MATERIAS
FOREIGN KEY (MATERIA)
REFERENCES MATERIAS(ID_MATERIA);

ALTER TABLE SUELDOS ADD CONSTRAINT FK_PROFESOR_PAGO
FOREIGN KEY (PROFESOR)
REFERENCES PROFESORES(ID_PROFESOR);

--------------------------------------------
---crear triggers y secuencias----
--------------------------------------
CREATE SEQUENCE SQ_ESTUDIANTE START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER ON_INSERT_ESTUDIANTES BEFORE 
INSERT ON ESTUDIANTES FOR EACH ROW BEGIN 
SELECT SQ_ESTUDIANTE.NEXTVAL INTO :new.ID_ESTUDIANTE FROM dual;
END;

CREATE SEQUENCE SQ_MATERIA START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER ON_INSERT_MATERIA BEFORE 
INSERT ON MATERIAS FOR EACH ROW BEGIN 
SELECT SQ_MATERIA.NEXTVAL INTO :new.ID_MATERIA FROM dual;
END;


CREATE SEQUENCE SQ_CARRERA START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER ON_INSERT_CARRERAS BEFORE 
INSERT ON CARRERAS FOR EACH ROW BEGIN 
SELECT SQ_CARRERA.NEXTVAL INTO :new.ID_CARRERA FROM dual;
END;


CREATE SEQUENCE SQ_PAGOS START WITH 1 INCREMENT BY 1;
CREATE OR REPLACE TRIGGER ON_INSERT_PAGOS BEFORE 
INSERT ON PAGOS FOR EACH ROW BEGIN 
SELECT SQ_PAGOS.NEXTVAL INTO :new.ID_PAGO FROM dual;
END;

CREATE SEQUENCE SQ_PROF START WITH 1 INCREMENT BY 1;
commit;
CREATE SEQUENCE SQ_PROFESOR START WITH 1 INCREMENT BY 1;
CREATE OR REPLACE TRIGGER ON_INSERT_PROFESOR BEFORE 
INSERT ON PROFESORES FOR EACH ROW BEGIN 
SELECT SQ_PROFESOR.NEXTVAL INTO :new.ID_PROFESOR FROM dual;
END;

INSERT ALL
INTO PROFESORES(NOMBRE, CEDULA, TELEFONO, FECHA_INGRESO, AREA, SUELDO)
VALUES('Evelin Perez', 'EVL7895PER', '5467824598', '24/08/2015', 'Ing Sistemas', 4200.00)
SELECT * FROM dual;

CREATE SEQUENCE SQ_CLASES START WITH 1 INCREMENT BY 1;
CREATE OR REPLACE TRIGGER ON_INSERT_CLASES BEFORE 
INSERT ON CLASES FOR EACH ROW BEGIN 
SELECT SQ_CLASES.NEXTVAL INTO :new.ID_CLASE FROM dual;
END;

CREATE SEQUENCE SQ_SUELDOS START WITH 1 INCREMENT BY 1;
CREATE OR REPLACE TRIGGER ON_INSERT_SUELDOS BEFORE 
INSERT ON SUELDOS FOR EACH ROW BEGIN 
SELECT SQ_SUELDOS.NEXTVAL INTO :new.ID_PAGO FROM dual;
END;

DESCRIBE CARRERAS;
INSERT ALL
INTO CARRERAS(NOMBRE, DURACION)
VALUES('Enfermeria', '7 semestres')
INTO CARRERAS(NOMBRE, DURACION)
VALUES('Mecatronicva', '8 semestres')
INTO CARRERAS(NOMBRE, DURACION)
VALUES('Informatica', '8 semestres')
INTO CARRERAS(NOMBRE, DURACION)
VALUES('Gatronomia', '7 semestres')
INTO CARRERAS(NOMBRE, DURACION)
VALUES('Criminologia', '8 semestres')
SELECT * FROM DUAL;

INSERT ALL
INTO MATERIAS(MATERIA)
VALUES('ALGEBRA')
INTO MATERIAS(MATERIA)
VALUES('CALCULO')
INTO MATERIAS(MATERIA)
VALUES('FISICA')
INTO MATERIAS(MATERIA)
VALUES('ALIMENTOS')
INTO MATERIAS(MATERIA)
VALUES('INGLES')
INTO MATERIAS(MATERIA)
VALUES('COMUNICACION')
INTO MATERIAS(MATERIA)
VALUES('GEOMETRIA')
INTO MATERIAS(MATERIA)
VALUES('ETICA')
SELECT * FROM DUAL;

DELETE FROM MATERIAS WHERE ID_MATERIA > 8 AND ID_MATERIA<17;
INSERT ALL
INTO MATERIAS(MATERIA)
VALUES('ELECTRONICA')
INTO MATERIAS(MATERIA)
VALUES('ALGORITMOS')
INTO MATERIAS(MATERIA)
VALUES('PSICOLOGIA')
INTO MATERIAS(MATERIA)
VALUES('PROYECTOS')
SELECT * FROM DUAL;

DESCRIBE ESTUDIANTES;

INSERT ALL
INTO ESTUDIANTES(NOMBRE, TELEFONO, EMAIL, FECHA_INGRESO, CARRERA, COLEGIATURA)
VALUES('Leticia Garcia', '2367894565', 'lety@gmail.com', '24/08/2019',1, 1750.00)
INTO ESTUDIANTES(NOMBRE, TELEFONO, EMAIL, FECHA_INGRESO, CARRERA, COLEGIATURA)
VALUES('Ivan Montes', '7897894565', 'montes@gmail.com', '24/08/2019',1, 1800.00)
INTO ESTUDIANTES(NOMBRE, TELEFONO, EMAIL, FECHA_INGRESO, CARRERA, COLEGIATURA)
VALUES('Pedro Romero', '4567844565', 'pedro@gmail.com', '24/08/2019',2, 1650.00)
INTO ESTUDIANTES(NOMBRE, TELEFONO, EMAIL, FECHA_INGRESO, CARRERA, COLEGIATURA)
VALUES('Cesar Dominguez', '4467844565', 'cesar@gmail.com', '24/08/2019',2, 1600.00)
INTO ESTUDIANTES(NOMBRE, TELEFONO, EMAIL, FECHA_INGRESO, CARRERA, COLEGIATURA)
VALUES('Selena Juarez', '9867844565', 'sel@gmail.com', '24/08/2019',3, 1550.00)
INTO ESTUDIANTES(NOMBRE, TELEFONO, EMAIL, FECHA_INGRESO, CARRERA, COLEGIATURA)
VALUES('Juan Ponce', '9861844565', 'ponce@gmail.com', '24/08/2019',3, 1650.00)
INTO ESTUDIANTES(NOMBRE, TELEFONO, EMAIL, FECHA_INGRESO, CARRERA, COLEGIATURA)
VALUES('Mariano Vidal', '6427844565', 'mariano@gmail.com', '24/08/2019',4, 1500.00)
INTO ESTUDIANTES(NOMBRE, TELEFONO, EMAIL, FECHA_INGRESO, CARRERA, COLEGIATURA)
VALUES('Miriam Guzman', '7867844565', 'mirg@gmail.com', '24/08/2019',4, 1700.00)
INTO ESTUDIANTES(NOMBRE, TELEFONO, EMAIL, FECHA_INGRESO, CARRERA, COLEGIATURA)
VALUES('Alex Pacheco', '1237844565', 'alx@gmail.com', '24/08/2019',5, 1800.00)
INTO ESTUDIANTES(NOMBRE, TELEFONO, EMAIL, FECHA_INGRESO, CARRERA, COLEGIATURA)
VALUES('Felipe Roman', '5567844565', 'felipe@gmail.com', '24/08/2019',5, 1850.00)
SELECT * FROM DUAL;

DESCRIBE PROFESORES

INSERT ALL
INTO PROFESORES(NOMBRE, CEDULA, TELEFONO, FECHA_INGRESO, AREA, SUELDO)
VALUES('Emilio Perez', 'EML7895PER', '5467824598', '24/08/2015', 'Ing Sistemas', 4200.00)
INTO PROFESORES(NOMBRE, CEDULA, TELEFONO, FECHA_INGRESO, AREA, SUELDO)
VALUES('Blanca Saenz', 'BLN4595SAZ', '2387824598', '24/08/2016', 'Lic Enfermeria', 4000.00)
INTO PROFESORES(NOMBRE, CEDULA, TELEFONO, FECHA_INGRESO, AREA, SUELDO)
VALUES('Yair Sosa', 'YAR1295SOS', '4457824598', '24/08/2015', 'Lic Criminologia', 4400.00)
INTO PROFESORES(NOMBRE, CEDULA, TELEFONO, FECHA_INGRESO, AREA, SUELDO)
VALUES('Diana Jimenez', 'DIN7895JMZ', '6517824598', '24/08/2018', 'Lic Gastronomia', 3900.00)
INTO PROFESORES(NOMBRE, CEDULA, TELEFONO, FECHA_INGRESO, AREA, SUELDO)
VALUES('Irving Rodriguez', 'IRV7895ROZ', '5467844500', '24/08/2016', 'Ing Mecatronica', 4250.00)
SELECT * FROM DUAL;

describe CLASES

INSERT ALL
INTO CLASES(PROFESOR, MATERIA)
VALUES(1,1)
INTO CLASES(PROFESOR, MATERIA)
VALUES(1,2)
INTO CLASES(PROFESOR, MATERIA)
VALUES(1,3)
INTO CLASES(PROFESOR, MATERIA)
VALUES(5,7)
INTO CLASES(PROFESOR, MATERIA)
VALUES(5,17)
INTO CLASES(PROFESOR, MATERIA)
VALUES(5,18)
INTO CLASES(PROFESOR, MATERIA)
VALUES(2,19)
INTO CLASES(PROFESOR, MATERIA)
VALUES(2,8)
INTO CLASES(PROFESOR, MATERIA)
VALUES(3,6)
INTO CLASES(PROFESOR, MATERIA)
VALUES(4,4)
INTO CLASES(PROFESOR, MATERIA)
VALUES(4,5)
INTO CLASES(PROFESOR, MATERIA)
VALUES(4,20)
SELECT * FROM DUAL;

SELECT * FROM ESTUDIANTES;
ALTER TABLE PAGOS ADD MONTO NUMBER(6,22);
ALTER TABLE PAGOS ADD CONCEPTO NVARCHAR2(60);
ALTER TABLE PAGOS MODIFY MONTO NUMBER(6,2);
DESCRIBE PAGOS

INSERT ALL
INTO PAGOS(ESTUDIANTE, FECHA, MONTO, CONCEPTO)
VALUES(1, '24/09/2019', 1750.00, 'Mes de septiembre')
INTO PAGOS(ESTUDIANTE, FECHA, MONTO, CONCEPTO)
VALUES(1, '24/10/2019', 1750.00, 'Mes de octubre')
INTO PAGOS(ESTUDIANTE, FECHA, MONTO, CONCEPTO)
VALUES(1, '24/12/2019', 3500.00, 'Mes de noviembre - diciembre')
INTO PAGOS(ESTUDIANTE, FECHA, MONTO, CONCEPTO)
VALUES(2, '24/10/2019', 3600.00, 'Mes de septiembre - octubre')
INTO PAGOS(ESTUDIANTE, FECHA, MONTO, CONCEPTO)
VALUES(2, '24/11/2019', 1800.00, 'Mes de noviembre')
INTO PAGOS(ESTUDIANTE, FECHA, MONTO, CONCEPTO)
VALUES(2, '24/12/2019', 1800.00, 'Mes de diciembre')
INTO PAGOS(ESTUDIANTE, FECHA, MONTO, CONCEPTO)
VALUES(3, '24/09/2019', 1650.00, 'Mes de septiembre')
INTO PAGOS(ESTUDIANTE, FECHA, MONTO, CONCEPTO)
VALUES(3, '24/10/2019', 1650.00, 'Mes de octubre')
INTO PAGOS(ESTUDIANTE, FECHA, MONTO, CONCEPTO)
VALUES(3, '24/11/2019', 1650.00, 'Mes de noviembre')
INTO PAGOS(ESTUDIANTE, FECHA, MONTO, CONCEPTO)
VALUES(3, '24/12/2019', 1650.00, 'Mes de diciembre')
INTO PAGOS(ESTUDIANTE, FECHA, MONTO, CONCEPTO)
VALUES(4, '24/10/2019', 3200.00, 'Mes de septiembre - octubre')
INTO PAGOS(ESTUDIANTE, FECHA, MONTO, CONCEPTO)
VALUES(4, '24/12/2019', 3200.00, 'Mes de noviembre - diciembre')
INTO PAGOS(ESTUDIANTE, FECHA, MONTO, CONCEPTO)
VALUES(5, '24/09/2019', 1550.00, 'Mes de septiembre')
INTO PAGOS(ESTUDIANTE, FECHA, MONTO, CONCEPTO)
VALUES(5, '24/10/2019', 1550.00, 'Mes de octubre')
INTO PAGOS(ESTUDIANTE, FECHA, MONTO, CONCEPTO)
VALUES(5, '24/12/2019', 3100.00, 'Mes de noviembre - diciembre')
INTO PAGOS(ESTUDIANTE, FECHA, MONTO, CONCEPTO)
VALUES(6, '24/09/2019', 1650.00, 'Mes de septiembre')
INTO PAGOS(ESTUDIANTE, FECHA, MONTO, CONCEPTO)
VALUES(6, '24/10/2019', 1650.00, 'Mes de octubre')
INTO PAGOS(ESTUDIANTE, FECHA, MONTO, CONCEPTO)
VALUES(6, '24/11/2019', 1650.00, 'Mes de noviembre')
INTO PAGOS(ESTUDIANTE, FECHA, MONTO, CONCEPTO)
VALUES(6, '24/12/2019', 1650.00, 'Mes de diciembre')
INTO PAGOS(ESTUDIANTE, FECHA, MONTO, CONCEPTO)
VALUES(7, '24/09/2019', 1500.00, 'Mes de septiembre')
INTO PAGOS(ESTUDIANTE, FECHA, MONTO, CONCEPTO)
VALUES(7, '24/12/2019', 4500.00, 'Mes de octubre - noviembre - diciembre')
INTO PAGOS(ESTUDIANTE, FECHA, MONTO, CONCEPTO)
VALUES(8, '24/09/2019', 1700.00, 'Mes de septiembre')
INTO PAGOS(ESTUDIANTE, FECHA, MONTO, CONCEPTO)
VALUES(8, '24/10/2019', 1700.00, 'Mes de octubre')
INTO PAGOS(ESTUDIANTE, FECHA, MONTO, CONCEPTO)
VALUES(8, '24/11/2019', 1700.00, 'Mes de noviembre')
INTO PAGOS(ESTUDIANTE, FECHA, MONTO, CONCEPTO)
VALUES(8, '24/12/2019', 1700.00, 'Mes de diciembre')
INTO PAGOS(ESTUDIANTE, FECHA, MONTO, CONCEPTO)
VALUES(9, '24/09/2019', 1800.00, 'Mes de septiembre')
INTO PAGOS(ESTUDIANTE, FECHA, MONTO, CONCEPTO)
VALUES(9, '24/10/2019', 1800.00, 'Mes de octubre')
INTO PAGOS(ESTUDIANTE, FECHA, MONTO, CONCEPTO)
VALUES(9, '24/11/2019', 1800.00, 'Mes de noviembre')
INTO PAGOS(ESTUDIANTE, FECHA, MONTO, CONCEPTO)
VALUES(9, '24/12/2019', 1800.00, 'Mes de diciembre')
INTO PAGOS(ESTUDIANTE, FECHA, MONTO, CONCEPTO)
VALUES(10, '24/09/2019', 1850.00, 'Mes de septiembre')
INTO PAGOS(ESTUDIANTE, FECHA, MONTO, CONCEPTO)
VALUES(10, '24/10/2019', 1850.00, 'Mes de octubre')
INTO PAGOS(ESTUDIANTE, FECHA, MONTO, CONCEPTO)
VALUES(10, '24/11/2019', 1850.00, 'Mes de noviembre')
INTO PAGOS(ESTUDIANTE, FECHA, MONTO, CONCEPTO)
VALUES(10, '24/12/2019', 1850.00, 'Mes de diciembre')
SELECT * FROM DUAL;

SELECT * FROM PROFESORES;
DESCRIBE SUELDOS;

INSERT ALL
INTO SUELDOS(PROFESOR, FECHA, MONTO)
VALUES(1, '15/09/2019', 4200.00)
INTO SUELDOS(PROFESOR, FECHA, MONTO)
VALUES(1, '01/10/2019', 4200.00)
INTO SUELDOS(PROFESOR, FECHA, MONTO)
VALUES(1, '15/10/2019', 4200.00)
INTO SUELDOS(PROFESOR, FECHA, MONTO)
VALUES(1, '01/11/2019', 4200.00)
INTO SUELDOS(PROFESOR, FECHA, MONTO)
VALUES(1, '15/11/2019', 4200.00)
INTO SUELDOS(PROFESOR, FECHA, MONTO)
VALUES(1, '01/12/2019', 4200.00)
INTO SUELDOS(PROFESOR, FECHA, MONTO)
VALUES(1, '15/12/2019', 4200.00)
INTO SUELDOS(PROFESOR, FECHA, MONTO)
VALUES(2, '15/09/2019', 4000.00)
INTO SUELDOS(PROFESOR, FECHA, MONTO)
VALUES(2, '01/10/2019', 4000.00)
INTO SUELDOS(PROFESOR, FECHA, MONTO)
VALUES(2, '15/10/2019', 4000.00)
INTO SUELDOS(PROFESOR, FECHA, MONTO)
VALUES(2, '01/11/2019', 4000.00)
INTO SUELDOS(PROFESOR, FECHA, MONTO)
VALUES(2, '15/11/2019', 4000.00)
INTO SUELDOS(PROFESOR, FECHA, MONTO)
VALUES(2, '01/12/2019', 4000.00)
INTO SUELDOS(PROFESOR, FECHA, MONTO)
VALUES(2, '15/12/2019', 4000.00)
INTO SUELDOS(PROFESOR, FECHA, MONTO)
VALUES(3, '15/09/2019', 3900.00)
INTO SUELDOS(PROFESOR, FECHA, MONTO)
VALUES(3, '01/10/2019', 4400.00)
INTO SUELDOS(PROFESOR, FECHA, MONTO)
VALUES(3, '15/10/2019', 4400.00)
INTO SUELDOS(PROFESOR, FECHA, MONTO)
VALUES(3, '01/11/2019', 4400.00)
INTO SUELDOS(PROFESOR, FECHA, MONTO)
VALUES(3, '15/11/2019', 4400.00)
INTO SUELDOS(PROFESOR, FECHA, MONTO)
VALUES(3, '01/12/2019', 4400.00)
INTO SUELDOS(PROFESOR, FECHA, MONTO)
VALUES(3, '15/12/2019', 4400.00)
INTO SUELDOS(PROFESOR, FECHA, MONTO)
VALUES(4, '15/09/2019', 3900.00)
INTO SUELDOS(PROFESOR, FECHA, MONTO)
VALUES(4, '01/10/2019', 3900.00)
INTO SUELDOS(PROFESOR, FECHA, MONTO)
VALUES(4, '15/10/2019', 3900.00)
INTO SUELDOS(PROFESOR, FECHA, MONTO)
VALUES(4, '01/11/2019', 3900.00)
INTO SUELDOS(PROFESOR, FECHA, MONTO)
VALUES(4, '15/11/2019', 3900.00)
INTO SUELDOS(PROFESOR, FECHA, MONTO)
VALUES(4, '01/12/2019', 3900.00)
INTO SUELDOS(PROFESOR, FECHA, MONTO)
VALUES(4, '15/12/2019', 3900.00)
INTO SUELDOS(PROFESOR, FECHA, MONTO)
VALUES(5, '15/09/2019', 4250.00)
INTO SUELDOS(PROFESOR, FECHA, MONTO)
VALUES(5, '01/10/2019', 4250.00)
INTO SUELDOS(PROFESOR, FECHA, MONTO)
VALUES(5, '15/10/2019', 4250.00)
INTO SUELDOS(PROFESOR, FECHA, MONTO)
VALUES(5, '01/11/2019', 4250.00)
INTO SUELDOS(PROFESOR, FECHA, MONTO)
VALUES(5, '15/11/2019', 4250.00)
INTO SUELDOS(PROFESOR, FECHA, MONTO)
VALUES(5, '01/12/2019', 4250.00)
INTO SUELDOS(PROFESOR, FECHA, MONTO)
VALUES(5, '15/12/2019', 4250.00)
SELECT * FROM DUAL;

COMMIT;

SELECT P.NOMBRE, P.CEDULA, S.FECHA, S.MONTO
FROM PROFESORES P INNER JOIN SUELDOS S
ON S.PROFESOR = P.ID_PROFESOR WHERE P.ID_PROFESOR = 1;

DESCRIBE ESTUDIANTES;
DESCRIBE MATERIAS;
DESCRIBE PROFESORES;
DESCRIBE CLASES;
DESCRIBE SUELDOS;